"""
Author: Miquel Anglada Girotto
Contact: miquelangladagirotto [at] gmail [dot] com
"""

import os
import pandas as pd

# variables
ROOT = os.path.dirname(os.path.dirname(os.getcwd()))
RAW_DIR = os.path.join(ROOT,"data","raw")
PREP_DIR = os.path.join(ROOT,"data","prep")
SUPPORT_DIR = os.path.join(ROOT,"support")
RESULTS_DIR = os.path.join(ROOT,"results","sf_targets_inference")

METHODS_INFER = ["correlation_pearson","correlation_spearman","aracne"]
CELL_LINES = ["K562","HepG2"]

CANCER_TYPES = [
    'ACC',
    'BLCA',
    'BRCA',
    'CESC',
    'CHOL',
    'COAD',
    'DLBC',
    #'ESCA',
    'GBM',
    'HNSC',
    'KICH',
    'KIRC',
    'KIRP',
    #'LAML',
    'LGG',
    'LIHC',
    'LUAD',
    'LUSC',
    'MESO',
    #'OV',
    'PAAD',
    'PCPG',
    'PRAD',
    'READ',
    'SARC',
    'SKCM',
    #'STAD',
    'TGCT',
    'THCA',
    'THYM',
    'UCEC',
    'UCS',
    'UVM'
]
DATASETS = ["CCLE"] #+ CANCER_TYPES

##### RULES #####
rule all:
    input:
        # target inference
        expand(os.path.join(RESULTS_DIR,"files","target_inference","{method}","{dataset}.tsv.gz"), method=["correlation_pearson","correlation_spearman"], dataset=DATASETS),
        expand(os.path.join(RESULTS_DIR,"files","target_inference","aracne","{dataset}.tsv.gz"), dataset=DATASETS),
        
        # evaluation
        #expand(os.path.join(RESULTS_DIR,"files","inference_evaluation","{method}-{cell_line}.tsv.gz"), method=METHODS_INFER, cell_line=CELL_LINES),
        #os.path.join(RESULTS_DIR,"files","inference_evaluation","merged.tsv.gz"),
        
        # make figures
        #os.path.join(RESULTS_DIR,'figures','target_inference')
        
ruleorder: target_inference_aracne > target_inference
        
rule target_inference:
    input:
        splicing = os.path.join(PREP_DIR,"event_psi","{dataset}-EX.tsv.gz"),
        genexpr = os.path.join(PREP_DIR,"genexpr_tpm","{dataset}.tsv.gz"),
        gene_sources = os.path.join(SUPPORT_DIR,"GOBP_RNA_SPLICING-ensembl.txt")
    output:
        os.path.join(RESULTS_DIR,"files","target_inference","{method}","{dataset}.tsv.gz")
    params:
        method="{method}"
    threads: 10
    shell:
        """
        nice python scripts/infer_targets.py \
                    --splicing_file={input.splicing} \
                    --genexpr_file={input.genexpr} \
                    --gene_sources_file={input.gene_sources} \
                    --method={params.method} \
                    --n_jobs={threads} \
                    --output_file={output}
        """
        
        
rule target_inference_aracne:
    input:
        splicing = os.path.join(PREP_DIR,"event_psi_imputed","{dataset}-EX.tsv.gz"),
        genexpr = os.path.join(PREP_DIR,"genexpr_tpm","{dataset}.tsv.gz"),
        gene_sources = os.path.join(SUPPORT_DIR,"GOBP_RNA_SPLICING-ensembl.txt"),
        spearman = os.path.join(RESULTS_DIR,"files","target_inference","correlation_spearman","{dataset}.tsv.gz")
    output:
        os.path.join(RESULTS_DIR,"files","target_inference","aracne","{dataset}.tsv.gz")
    params:
        method="aracne"
    threads: 10
    shell:
        """
        nice python scripts/infer_targets.py \
                    --splicing_file={input.splicing} \
                    --genexpr_file={input.genexpr} \
                    --gene_sources_file={input.gene_sources} \
                    --correlation_spearman_file={input.spearman} \
                    --method={params.method} \
                    --n_jobs={threads} \
                    --output_file={output}
        """


rule inference_evaluation:
    input:
        inference = os.path.join(RESULTS_DIR,"files","target_inference","{method}.tsv.gz"),
        ground_truth_kd_dpsi = os.path.join(PREP_DIR,'ground_truth_kd','ENCORE',"{cell_line}",'delta_psi-EX.tsv.gz'),
        ground_truth_kd_rel = os.path.join(PREP_DIR,'ground_truth_kd','ENCORE',"{cell_line}",'delta_psi_rel-EX.tsv.gz')
    output:
        os.path.join(RESULTS_DIR,"files","inference_evaluation","{method}-{cell_line}.tsv.gz")
    threads: 16
    shell:
        """
        nice python scripts/evaluate_inference.py \
                    --inference_file={input.inference} \
                    --ground_truth_kd_dpsi_file={input.ground_truth_kd_dpsi} \
                    --ground_truth_kd_rel_file={input.ground_truth_kd_rel} \
                    --n_jobs={threads} \
                    --output_file={output}
        """

rule combine_inference_evaluations:
    input:
        evaluations = [
            os.path.join(RESULTS_DIR,"files","inference_evaluation","{method}-{cell_line}.tsv.gz").format(method=method, cell_line=cell_line)
            for method in METHODS_INFER for cell_line in CELL_LINES
        ]
    output:
        os.path.join(RESULTS_DIR,"files","inference_evaluation","merged.tsv.gz")
    run:
        import os
        import pandas as pd
        
        dfs = []
        for evaluation_file in input.evaluations:
            method = os.path.basename(evaluation_file).replace(".tsv.gz","").split("-")[0]
            cell_line = os.path.basename(evaluation_file).replace(".tsv.gz","").split("-")[1]
            
            df = pd.read_table(evaluation_file)
            df["sf_target_inference_method"] = method
            df["kd_cell_line"] = cell_line
            
            dfs.append(df)
            
        dfs = pd.concat(dfs)
        dfs.to_csv(output[0], index=False, sep="\t", compression="gzip")
            
        print("Done!")
        
rule figures_target_inference:
    input:
        evaluation = os.path.join(RESULTS_DIR,"files","inference_evaluation","merged.tsv.gz")
    output:
        directory(os.path.join(RESULTS_DIR,'figures','target_inference'))
    shell:
        """
        nice Rscript scripts/figures_target_inference.R \
                    --evaluation_file={input.evaluation} \
                    --figs_dir={output}
        """